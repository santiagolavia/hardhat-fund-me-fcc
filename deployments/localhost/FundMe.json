{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xd4bde860413d1d41f17dbe3815f6529fc8c39d52f639c04a3473eeab16aefc9a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1058111",
    "logsBloom": "0x
    "blockHash": "0x8ec9cefe78338a5ce7583bfccb3b3830e1bf5ebb76ae0deb85e49971f3b09b03",
    "transactionHash": "0xd4bde860413d1d41f17dbe3815f6529fc8c39d52f639c04a3473eeab16aefc9a",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1058111",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "569fb38124ed895708344f8c2c704f66",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements data feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n\\n/**\\n * @title A contract for crowfunding\\n * @author Patrick Collins\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements data feeds as our library\\n */\\ncontract FundMe {\\n    \\n    // Type variables\\n    using PriceConverter for uint256;\\n    \\n    // State variables\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address public /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface public s_priceFeed;\\n   \\n    // Modifier\\n    modifier onlyOwner {\\n    // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    //// functions \\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public \\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings cant be in memory\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xeedbb2b3042cec716686ba1d3a7a3328fd2e26125afc15a9270ff03af5a7867d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xabf79aa76d3a51f328296ab543e03ae2dc3199835335e47a77a2247ec7340937\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620012c7380380620012c78339818101604052810190620000379190620000d7565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600081519050620000d18162000142565b92915050565b600060208284031215620000f057620000ef6200013d565b5b60006200010084828501620000c0565b91505092915050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014d8162000109565b81146200015957600080fd5b50565b61115b806200016c6000396000f3fe60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610147578063b60d428814610172578063be2693f01461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af71461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102eb565b6040516100ba9190610c4e565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ab3565b610311565b6040516100f79190610ca9565b60405180910390f35b610108610329565b005b34801561011657600080fd5b50610131600480360381019061012c9190610ae0565b61058d565b60405161013e9190610c33565b60405180910390f35b34801561015357600080fd5b5061015c6105cc565b6040516101699190610ca9565b60405180910390f35b61017a6101b1565b005b6101846105d9565b005b34801561019257600080fd5b5061019b6108a1565b6040516101a89190610c33565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c89565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610ce0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045b576000600182815481106103d6576103d5611011565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045390610f6a565b9150506103b3565b50600067ffffffffffffffff81111561047757610476611040565b5b6040519080825280602002602001820160405280156104a55781602001602082028036833780820191505090505b50600190805190602001906104bb9291906109a3565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050490610c1e565b60006040518083038185875af1925050503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b505090508061058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610c69565b60405180910390fd5b50565b6001818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069a575b5050505050905060005b815181101561076e57600082828151811061070c5761070b611011565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076690610f6a565b9150506106ee565b50600067ffffffffffffffff81111561078a57610789611040565b5b6040519080825280602002602001820160405280156107b85781602001602082028036833780820191505090505b50600190805190602001906107ce9291906109a3565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081790610c1e565b60006040518083038185875af1925050503d8060008114610854576040519150601f19603f3d011682016040523d82523d6000602084013e610859565b606091505b505090508061089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490610c69565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108d383610903565b90506000670de0b6b3a764000085836108ec9190610e7e565b6108f69190610d36565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094c57600080fd5b505afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610b0d565b5050509150506402540be4008161099b9190610d67565b915050919050565b828054828255906000526020600020908101928215610a1c579160200282015b82811115610a1b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c3565b5b509050610a299190610a2d565b5090565b5b80821115610a46576000816000905550600101610a2e565b5090565b600081359050610a59816110c9565b92915050565b600081519050610a6e816110e0565b92915050565b600081359050610a83816110f7565b92915050565b600081519050610a98816110f7565b92915050565b600081519050610aad8161110e565b92915050565b600060208284031215610ac957610ac861106f565b5b6000610ad784828501610a4a565b91505092915050565b600060208284031215610af657610af561106f565b5b6000610b0484828501610a74565b91505092915050565b600080600080600060a08688031215610b2957610b2861106f565b5b6000610b3788828901610a9e565b9550506020610b4888828901610a5f565b9450506040610b5988828901610a89565b9350506060610b6a88828901610a89565b9250506080610b7b88828901610a9e565b9150509295509295909350565b610b9181610ed8565b82525050565b610ba081610f34565b82525050565b6000610bb3600b83610ccf565b9150610bbe82611074565b602082019050919050565b6000610bd6601b83610ccf565b9150610be18261109d565b602082019050919050565b6000610bf9600083610cc4565b9150610c04826110c6565b600082019050919050565b610c1881610f14565b82525050565b6000610c2982610bec565b9150819050919050565b6000602082019050610c486000830184610b88565b92915050565b6000602082019050610c636000830184610b97565b92915050565b60006020820190508181036000830152610c8281610ba6565b9050919050565b60006020820190508181036000830152610ca281610bc9565b9050919050565b6000602082019050610cbe6000830184610c0f565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ceb82610f14565b9150610cf683610f14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2b57610d2a610fb3565b5b828201905092915050565b6000610d4182610f14565b9150610d4c83610f14565b925082610d5c57610d5b610fe2565b5b828204905092915050565b6000610d7282610eea565b9150610d7d83610eea565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dbc57610dbb610fb3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610df957610df8610fb3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3657610e35610fb3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7357610e72610fb3565b5b828202905092915050565b6000610e8982610f14565b9150610e9483610f14565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecd57610ecc610fb3565b5b828202905092915050565b6000610ee382610ef4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f3f82610f46565b9050919050565b6000610f5182610f58565b9050919050565b6000610f6382610ef4565b9050919050565b6000610f7582610f14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fa857610fa7610fb3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110d281610ed8565b81146110dd57600080fd5b50565b6110e981610eea565b81146110f457600080fd5b50565b61110081610f14565b811461110b57600080fd5b50565b61111781610f1e565b811461112257600080fd5b5056fea26469706673582212203f637a90d279fac8abfdd69f6fddd67d432c916aadc893b275fc9c14cfabdbaf64736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80636b69a5921161004e5780636b69a59214610147578063b60d428814610172578063be2693f01461017c578063dba6335f146101865761008e565b80630ec3b027146100985780631bf6132d146100c35780633ccfd60b1461010057806354861af71461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100ad6102eb565b6040516100ba9190610c4e565b60405180910390f35b3480156100cf57600080fd5b506100ea60048036038101906100e59190610ab3565b610311565b6040516100f79190610ca9565b60405180910390f35b610108610329565b005b34801561011657600080fd5b50610131600480360381019061012c9190610ae0565b61058d565b60405161013e9190610c33565b60405180910390f35b34801561015357600080fd5b5061015c6105cc565b6040516101699190610ca9565b60405180910390f35b61017a6101b1565b005b6101846105d9565b005b34801561019257600080fd5b5061019b6108a1565b6040516101a89190610c33565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108c790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c89565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610ce0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b0576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561045b576000600182815481106103d6576103d5611011565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045390610f6a565b9150506103b3565b50600067ffffffffffffffff81111561047757610476611040565b5b6040519080825280602002602001820160405280156104a55781602001602082028036833780820191505090505b50600190805190602001906104bb9291906109a3565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050490610c1e565b60006040518083038185875af1925050503d8060008114610541576040519150601f19603f3d011682016040523d82523d6000602084013e610546565b606091505b505090508061058a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058190610c69565b60405180910390fd5b50565b6001818154811061059d57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610660576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161069a575b5050505050905060005b815181101561076e57600082828151811061070c5761070b611011565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061076690610f6a565b9150506106ee565b50600067ffffffffffffffff81111561078a57610789611040565b5b6040519080825280602002602001820160405280156107b85781602001602082028036833780820191505090505b50600190805190602001906107ce9291906109a3565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161081790610c1e565b60006040518083038185875af1925050503d8060008114610854576040519150601f19603f3d011682016040523d82523d6000602084013e610859565b606091505b505090508061089d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161089490610c69565b60405180910390fd5b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806108d383610903565b90506000670de0b6b3a764000085836108ec9190610e7e565b6108f69190610d36565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561094c57600080fd5b505afa158015610960573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109849190610b0d565b5050509150506402540be4008161099b9190610d67565b915050919050565b828054828255906000526020600020908101928215610a1c579160200282015b82811115610a1b5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109c3565b5b509050610a299190610a2d565b5090565b5b80821115610a46576000816000905550600101610a2e565b5090565b600081359050610a59816110c9565b92915050565b600081519050610a6e816110e0565b92915050565b600081359050610a83816110f7565b92915050565b600081519050610a98816110f7565b92915050565b600081519050610aad8161110e565b92915050565b600060208284031215610ac957610ac861106f565b5b6000610ad784828501610a4a565b91505092915050565b600060208284031215610af657610af561106f565b5b6000610b0484828501610a74565b91505092915050565b600080600080600060a08688031215610b2957610b2861106f565b5b6000610b3788828901610a9e565b9550506020610b4888828901610a5f565b9450506040610b5988828901610a89565b9350506060610b6a88828901610a89565b9250506080610b7b88828901610a9e565b9150509295509295909350565b610b9181610ed8565b82525050565b610ba081610f34565b82525050565b6000610bb3600b83610ccf565b9150610bbe82611074565b602082019050919050565b6000610bd6601b83610ccf565b9150610be18261109d565b602082019050919050565b6000610bf9600083610cc4565b9150610c04826110c6565b600082019050919050565b610c1881610f14565b82525050565b6000610c2982610bec565b9150819050919050565b6000602082019050610c486000830184610b88565b92915050565b6000602082019050610c636000830184610b97565b92915050565b60006020820190508181036000830152610c8281610ba6565b9050919050565b60006020820190508181036000830152610ca281610bc9565b9050919050565b6000602082019050610cbe6000830184610c0f565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ceb82610f14565b9150610cf683610f14565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d2b57610d2a610fb3565b5b828201905092915050565b6000610d4182610f14565b9150610d4c83610f14565b925082610d5c57610d5b610fe2565b5b828204905092915050565b6000610d7282610eea565b9150610d7d83610eea565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dbc57610dbb610fb3565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610df957610df8610fb3565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e3657610e35610fb3565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e7357610e72610fb3565b5b828202905092915050565b6000610e8982610f14565b9150610e9483610f14565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ecd57610ecc610fb3565b5b828202905092915050565b6000610ee382610ef4565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f3f82610f46565b9050919050565b6000610f5182610f58565b9050919050565b6000610f6382610ef4565b9050919050565b6000610f7582610f14565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fa857610fa7610fb3565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b6110d281610ed8565b81146110dd57600080fd5b50565b6110e981610eea565b81146110f457600080fd5b50565b61110081610f14565b811461110b57600080fd5b50565b61111781610f1e565b811461112257600080fd5b5056fea26469706673582212203f637a90d279fac8abfdd69f6fddd67d432c916aadc893b275fc9c14cfabdbaf64736f6c63430008070033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements data feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}