{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6250a39892c6790cb86b861788a6a3930ee1e69cce66f78c0e2bc983c28aea8b",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1072156",
    "logsBloom": "0x
    "blockHash": "0x69c62b5c72e9e7482aacd5cf4b72525304cf1d58d97ac75586ecbdad24e55682",
    "transactionHash": "0x6250a39892c6790cb86b861788a6a3930ee1e69cce66f78c0e2bc983c28aea8b",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1072156",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "1ba03789fe1b970af6f7173ef58b8270",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Patrick Collins\",\"details\":\"This implements data feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowfunding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\n\\n/**\\n * @title A contract for crowfunding\\n * @author Patrick Collins\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements data feeds as our library\\n */\\ncontract FundMe {\\n    \\n    // Type variables\\n    using PriceConverter for uint256;\\n    \\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private /* immutable */ i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n   \\n    // Modifier\\n    modifier onlyOwner {\\n    // revert(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n    \\n    //// functions \\n    //// constructor\\n    //// receive\\n    //// fallback\\n    //// external\\n    //// public \\n    //// internal\\n    //// private\\n    //// view / pure\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n    function fund() public payable {\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    function withdraw() public payable onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        //mappings cant be in memory\\n        for(uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++){\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x32da53c59155e64ca0a8080bc1e5594ea654f17e9e9a5bd7026dcefadceadad6\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xabf79aa76d3a51f328296ab543e03ae2dc3199835335e47a77a2247ec7340937\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001308380380620013088339818101604052810190620000379190620000d7565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200015c565b600081519050620000d18162000142565b92915050565b600060208284031215620000f057620000ef6200013d565b5b60006200010084828501620000c0565b91505092915050565b600062000116826200011d565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014d8162000109565b81146200015957600080fd5b50565b61119c806200016c6000396000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610af4565b6102eb565b6040516100cc9190610cea565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610597565b6040516101019190610cea565b60405180910390f35b34801561011657600080fd5b5061011f6105a4565b60405161012c9190610c74565b60405180910390f35b34801561014157600080fd5b5061014a6105ce565b6040516101579190610c8f565b60405180910390f35b6101686101b1565b005b6101726105f8565b005b34801561018057600080fd5b5061019b60048036038101906101969190610b21565b6108c0565b6040516101a89190610c74565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461090890919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610cca565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610d21565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610465576000600182815481106103e0576103df611052565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610fab565b9150506103bd565b50600067ffffffffffffffff81111561048157610480611081565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600190805190602001906104c59291906109e4565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050e90610c5f565b60006040518083038185875af1925050503d806000811461054b576040519150601f19603f3d011682016040523d82523d6000602084013e610550565b606091505b5050905080610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90610caa565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078d57600082828151811061072b5761072a611052565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078590610fab565b91505061070d565b50600067ffffffffffffffff8111156107a9576107a8611081565b5b6040519080825280602002602001820160405280156107d75781602001602082028036833780820191505090505b50600190805190602001906107ed9291906109e4565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161083690610c5f565b60006040518083038185875af1925050503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b50509050806108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390610caa565b60405180910390fd5b5050565b6000600182815481106108d6576108d5611052565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061091483610944565b90506000670de0b6b3a7640000858361092d9190610ebf565b6109379190610d77565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098d57600080fd5b505afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610b4e565b5050509150506402540be400816109dc9190610da8565b915050919050565b828054828255906000526020600020908101928215610a5d579160200282015b82811115610a5c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a04565b5b509050610a6a9190610a6e565b5090565b5b80821115610a87576000816000905550600101610a6f565b5090565b600081359050610a9a8161110a565b92915050565b600081519050610aaf81611121565b92915050565b600081359050610ac481611138565b92915050565b600081519050610ad981611138565b92915050565b600081519050610aee8161114f565b92915050565b600060208284031215610b0a57610b096110b0565b5b6000610b1884828501610a8b565b91505092915050565b600060208284031215610b3757610b366110b0565b5b6000610b4584828501610ab5565b91505092915050565b600080600080600060a08688031215610b6a57610b696110b0565b5b6000610b7888828901610adf565b9550506020610b8988828901610aa0565b9450506040610b9a88828901610aca565b9350506060610bab88828901610aca565b9250506080610bbc88828901610adf565b9150509295509295909350565b610bd281610f19565b82525050565b610be181610f75565b82525050565b6000610bf4600b83610d10565b9150610bff826110b5565b602082019050919050565b6000610c17601b83610d10565b9150610c22826110de565b602082019050919050565b6000610c3a600083610d05565b9150610c4582611107565b600082019050919050565b610c5981610f55565b82525050565b6000610c6a82610c2d565b9150819050919050565b6000602082019050610c896000830184610bc9565b92915050565b6000602082019050610ca46000830184610bd8565b92915050565b60006020820190508181036000830152610cc381610be7565b9050919050565b60006020820190508181036000830152610ce381610c0a565b9050919050565b6000602082019050610cff6000830184610c50565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d2c82610f55565b9150610d3783610f55565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6c57610d6b610ff4565b5b828201905092915050565b6000610d8282610f55565b9150610d8d83610f55565b925082610d9d57610d9c611023565b5b828204905092915050565b6000610db382610f2b565b9150610dbe83610f2b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dfd57610dfc610ff4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3a57610e39610ff4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7757610e76610ff4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb457610eb3610ff4565b5b828202905092915050565b6000610eca82610f55565b9150610ed583610f55565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0e57610f0d610ff4565b5b828202905092915050565b6000610f2482610f35565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f8082610f87565b9050919050565b6000610f9282610f99565b9050919050565b6000610fa482610f35565b9050919050565b6000610fb682610f55565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fe957610fe8610ff4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61111381610f19565b811461111e57600080fd5b50565b61112a81610f2b565b811461113557600080fd5b50565b61114181610f55565b811461114c57600080fd5b50565b61115881610f5f565b811461116357600080fd5b5056fea264697066735822122000d77340d6327e7b73e0012e3b8e1502945cd7b00688c769f1286b2a6a89df5064736f6c63430008070033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610af4565b6102eb565b6040516100cc9190610cea565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f4610597565b6040516101019190610cea565b60405180910390f35b34801561011657600080fd5b5061011f6105a4565b60405161012c9190610c74565b60405180910390f35b34801561014157600080fd5b5061014a6105ce565b6040516101579190610c8f565b60405180910390f35b6101686101b1565b005b6101726105f8565b005b34801561018057600080fd5b5061019b60048036038101906101969190610b21565b6108c0565b6040516101a89190610c74565b60405180910390f35b6802b5e3af16b18800006101f0600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461090890919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610cca565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610d21565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ba576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610465576000600182815481106103e0576103df611052565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045d90610fab565b9150506103bd565b50600067ffffffffffffffff81111561048157610480611081565b5b6040519080825280602002602001820160405280156104af5781602001602082028036833780820191505090505b50600190805190602001906104c59291906109e4565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161050e90610c5f565b60006040518083038185875af1925050503d806000811461054b576040519150601f19603f3d011682016040523d82523d6000602084013e610550565b606091505b5050905080610594576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058b90610caa565b60405180910390fd5b50565b6802b5e3af16b188000081565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461067f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561070357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116106b9575b5050505050905060005b815181101561078d57600082828151811061072b5761072a611052565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061078590610fab565b91505061070d565b50600067ffffffffffffffff8111156107a9576107a8611081565b5b6040519080825280602002602001820160405280156107d75781602001602082028036833780820191505090505b50600190805190602001906107ed9291906109e4565b506000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff164760405161083690610c5f565b60006040518083038185875af1925050503d8060008114610873576040519150601f19603f3d011682016040523d82523d6000602084013e610878565b606091505b50509050806108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b390610caa565b60405180910390fd5b5050565b6000600182815481106108d6576108d5611052565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061091483610944565b90506000670de0b6b3a7640000858361092d9190610ebf565b6109379190610d77565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561098d57600080fd5b505afa1580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c59190610b4e565b5050509150506402540be400816109dc9190610da8565b915050919050565b828054828255906000526020600020908101928215610a5d579160200282015b82811115610a5c5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a04565b5b509050610a6a9190610a6e565b5090565b5b80821115610a87576000816000905550600101610a6f565b5090565b600081359050610a9a8161110a565b92915050565b600081519050610aaf81611121565b92915050565b600081359050610ac481611138565b92915050565b600081519050610ad981611138565b92915050565b600081519050610aee8161114f565b92915050565b600060208284031215610b0a57610b096110b0565b5b6000610b1884828501610a8b565b91505092915050565b600060208284031215610b3757610b366110b0565b5b6000610b4584828501610ab5565b91505092915050565b600080600080600060a08688031215610b6a57610b696110b0565b5b6000610b7888828901610adf565b9550506020610b8988828901610aa0565b9450506040610b9a88828901610aca565b9350506060610bab88828901610aca565b9250506080610bbc88828901610adf565b9150509295509295909350565b610bd281610f19565b82525050565b610be181610f75565b82525050565b6000610bf4600b83610d10565b9150610bff826110b5565b602082019050919050565b6000610c17601b83610d10565b9150610c22826110de565b602082019050919050565b6000610c3a600083610d05565b9150610c4582611107565b600082019050919050565b610c5981610f55565b82525050565b6000610c6a82610c2d565b9150819050919050565b6000602082019050610c896000830184610bc9565b92915050565b6000602082019050610ca46000830184610bd8565b92915050565b60006020820190508181036000830152610cc381610be7565b9050919050565b60006020820190508181036000830152610ce381610c0a565b9050919050565b6000602082019050610cff6000830184610c50565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610d2c82610f55565b9150610d3783610f55565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d6c57610d6b610ff4565b5b828201905092915050565b6000610d8282610f55565b9150610d8d83610f55565b925082610d9d57610d9c611023565b5b828204905092915050565b6000610db382610f2b565b9150610dbe83610f2b565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610dfd57610dfc610ff4565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610e3a57610e39610ff4565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e7757610e76610ff4565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610eb457610eb3610ff4565b5b828202905092915050565b6000610eca82610f55565b9150610ed583610f55565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f0e57610f0d610ff4565b5b828202905092915050565b6000610f2482610f35565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610f8082610f87565b9050919050565b6000610f9282610f99565b9050919050565b6000610fa482610f35565b9050919050565b6000610fb682610f55565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610fe957610fe8610ff4565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b50565b61111381610f19565b811461111e57600080fd5b50565b61112a81610f2b565b811461113557600080fd5b50565b61114181610f55565b811461114c57600080fd5b50565b61115881610f5f565b811461116357600080fd5b5056fea264697066735822122000d77340d6327e7b73e0012e3b8e1502945cd7b00688c769f1286b2a6a89df5064736f6c63430008070033",
  "devdoc": {
    "author": "Patrick Collins",
    "details": "This implements data feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowfunding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 64,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "i_owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}